// ----- NOTES -----
// -server: 
//   -validate user id
//   -save logUser object
//   -get user's claim code
//-pressing enter is not submitting user ID
//-ok to use empty innerhtml to remove graph or is their a proper way? - look at sigma docs
//-want width and height of graph area 100%? - we changed this to stop flickering scrollbars
//-haven't done anything for diff screen sizes or mobile
//-currently take the last highlighted nodes as the answer when no ans submitted 
//  -could add line of JS to L2 func closeQuestion:
//      logUser.question.slice(-1)[0].push({type:'submitAns',node:'submitAns'});
//should be storing orig question number with userLog - since Qs shuffled

[main]

  **
  userLog = {question:[]}; //global, track user id, actions and answers
  **
  
  //convenience functions to show/hide elements
  hide =        {elmts -> elmts.setStyle 'display' 'none'}
  block =       {elmts -> elmts.setStyle 'display' 'block'}
  inlineBlock = {elmts -> elmts.setStyle 'display' 'inline-block'}
  
  //do everything inside load config callback
  Config [config_cb]
    
    Config = Config.fromJSON    
    Question = Config@question[.].shuf
    elapsedElm = '#elapsed'.elm
  	timeLimit = Config@timeLimit
   
    [submitID]
  	  **
  	  userLog.id = document.getElementById('userid').value
  	  **
      '#intro'.elm $hide
      '#instruc'.elm $block
    evt [pressedEnter]
      if evt.detail 'code' == 'Enter' 
        submitID $$
        evt.stop   //do not submit form - ?? does this work? - is it keydown that fires submit?
    '#user-id'.elm.on 'keydown' pressedEnter    
    '#id-submit'.elm.on 'click' submitID

  	[startSurvey]
      '#instruc'.elm $hide
      '#question'.elm $block  
      loadQuestion $$
  	'#start'.elm.on 'click' startSurvey

	  [loadQuestion]
	    ThisQ = Question.r (1-) 'cut' [.]
  	  '#question-text'.elm.setProp 'innerHTML' (ThisQ@text)
      '#submit-answer'.elm $inlineBlock
      **
      question(L2.toJS(L2_ThisQ));  //show queston - see question.js
      **
      elapsedElm.setStyle 'width' '0%'
      updateTimer.gap 1000 ("".time).delay timeLimit
      Question.n == 0.alt finishSurvey loadQuestion.delay timeLimit
      
    [closeQuestion] evt
      evt.me $hide        
      '#question-text'.elm.setProp 'innerHTML' 'Please wait until the timer runs out.' 
      '#graph-container'.elm.setProp 'innerHTML' ''
    '#submit-answer'.elm.on 'click' closeQuestion
      
    [finishSurvey]
  	  '#graph-container'.elm.setProp 'innerHTML' ''
  	  '#question'.elm $hide
  	  '#finished'.elm $block
  	    
    [updateTimer] timeStarted
      elapsedElm.setStyle 'width' ("".time - timeStarted/timeLimit*100 + '%')    
  	      
  'config.json'.ajaxGet config_cb
main.onLoad



